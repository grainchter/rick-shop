{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\rick-shop\\\\rick-shop\\\\src\\\\components\\\\main\\\\catalog.js\",\n    _s = $RefreshSig$();\n\nimport s from './catalog.module.css';\nimport { database } from '../../firebase/firebase';\nimport { getDatabase, ref, query, limitToLast } from \"firebase/database\";\nimport React, { useState, useEffect } from \"react\";\nimport Card from '../card/card';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCards, getCardsResolve } from '../../store/selected';\nimport FirebaseClass from '../../firebase/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Catalog = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [char, setChar] = useState([]);\n  const [clicked, setClicked] = useState(JSON.parse(localStorage.getItem(\"data2\")));\n  const [start, setStart] = useState(24);\n  dispatch(getCardsResolve(clicked));\n  useEffect(() => {\n    // FirebaseClass.getCharacters();\n    getData();\n  }, []);\n\n  const getData = () => {\n    database.ref('characters').limitToFirst(start).once('value', snapshot => {\n      const data = snapshot.val(); // const shuffled = data.sort(() => 0.5 - Math.random());\n      // let selected = shuffled.slice(0, 8);\n\n      setChar(data);\n    });\n  };\n\n  const nexPage = () => {\n    setStart(start + 8);\n    console.log(start);\n    getData();\n  };\n\n  const buy = id => {\n    var _JSON$parse;\n\n    let obj = Object.entries(char);\n    const keyPock = obj.find(element => element[1].id === id);\n    const clicks = (_JSON$parse = JSON.parse(localStorage.getItem(\"data2\"))) !== null && _JSON$parse !== void 0 ? _JSON$parse : [];\n    clicks.push(keyPock);\n    localStorage.setItem(\"data2\", JSON.stringify(clicks));\n    setClicked(JSON.parse(localStorage.getItem(\"data2\"))); // console.log();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.app,\n      onScroll: nexPage,\n      children: Object.entries(char).map(([key, {\n        name,\n        id,\n        image,\n        species,\n        status\n      }]) => /*#__PURE__*/_jsxDEV(Card, {\n        name: name,\n        image: image,\n        id: id,\n        species: species,\n        status: status,\n        onCardClick: () => {\n          buy(id);\n        }\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false) // <>\n  //   <div className={s.app}>\n  //     {\n  //       Object.entries(char).map(([key, { name, id, image, species, status }]) =>\n  //         <div className={s.block}>\n  //           <a><img src={image}></img></a>\n  //           <div className={s.description}>\n  //             <div className={s.name}>\n  //               <p>{name}</p>\n  //               <p>{id}</p>\n  //             </div>\n  //             <hr />\n  //             <p>{species}</p>\n  //             <p>{status}</p>\n  //           </div>\n  //           <div className={s.buy}>\n  //             <h1>${Math.floor((Math.random() * 10000) + 1)}</h1>\n  //             <button onClick={buy(id)}>Buy</button>\n  //           </div>\n  //         </div>\n  //       )\n  //     }\n  //     <button>вперед</button>\n  //     <button>назад</button>\n  //   </div>\n  // </>\n  ;\n};\n\n_s(Catalog, \"6LSSexjSIWS9YgN2SFqydEqjT9s=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Catalog;\nexport default Catalog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Catalog\");","map":{"version":3,"sources":["C:/Users/user/rick-shop/rick-shop/src/components/main/catalog.js"],"names":["s","database","getDatabase","ref","query","limitToLast","React","useState","useEffect","Card","useDispatch","useSelector","getCards","getCardsResolve","FirebaseClass","Catalog","dispatch","char","setChar","clicked","setClicked","JSON","parse","localStorage","getItem","start","setStart","getData","limitToFirst","once","snapshot","data","val","nexPage","console","log","buy","id","obj","Object","entries","keyPock","find","element","clicks","push","setItem","stringify","app","map","key","name","image","species","status"],"mappings":"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","sourcesContent":["import s from './catalog.module.css';\nimport { database } from '../../firebase/firebase';\nimport { getDatabase, ref, query, limitToLast } from \"firebase/database\";\nimport React, { useState, useEffect } from \"react\";\nimport Card from '../card/card';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCards, getCardsResolve } from '../../store/selected';\n\nimport FirebaseClass from '../../firebase/firebase';\n\n\n\nconst Catalog = () => {\n\n  const dispatch = useDispatch();\n\n\n  const [char, setChar] = useState([]);\n  const [clicked, setClicked] = useState(JSON.parse(localStorage.getItem(\"data2\")));\n\n  const [start, setStart] = useState(24);\n\n  dispatch(getCardsResolve(clicked));\n\n\n  useEffect(() => {\n    // FirebaseClass.getCharacters();\n    getData();\n  }, []);\n\n  const getData = () => {\n    database.ref('characters').limitToFirst(start).once('value', (snapshot) => {\n      const data = snapshot.val();\n      // const shuffled = data.sort(() => 0.5 - Math.random());\n      // let selected = shuffled.slice(0, 8);\n      setChar(data);\n    });\n  }\n\n  const nexPage = () => {\n    setStart(start+8);\n    console.log(start);\n    getData();\n  }\n\n\n  const buy = (id) => {\n    let obj = Object.entries(char);\n    const keyPock = obj.find(element =>\n      element[1].id === id);\n\n\n    const clicks = JSON.parse(localStorage.getItem(\"data2\")) ?? []\n    clicks.push(keyPock);\n    localStorage.setItem(\"data2\", JSON.stringify(clicks));\n    setClicked(JSON.parse(localStorage.getItem(\"data2\")));\n    // console.log();\n  };\n\n\n\n\n  return (\n    <>\n      <div className={s.app} onScroll={nexPage}>\n        {\n          Object.entries(char).map(([key, { name, id, image, species, status }]) =>\n            <Card\n              key={id}\n              name={name}\n              image={image}\n              id={id}\n              species={species}\n              status={status}\n\n              onCardClick={() => {\n\n                buy(id);\n\n              }\n              }\n            />\n          )\n        }\n\n\n\n      </div>\n    </>\n\n\n\n    // <>\n    //   <div className={s.app}>\n    //     {\n    //       Object.entries(char).map(([key, { name, id, image, species, status }]) =>\n    //         <div className={s.block}>\n    //           <a><img src={image}></img></a>\n    //           <div className={s.description}>\n    //             <div className={s.name}>\n    //               <p>{name}</p>\n    //               <p>{id}</p>\n    //             </div>\n    //             <hr />\n    //             <p>{species}</p>\n    //             <p>{status}</p>\n    //           </div>\n\n    //           <div className={s.buy}>\n    //             <h1>${Math.floor((Math.random() * 10000) + 1)}</h1>\n    //             <button onClick={buy(id)}>Buy</button>\n    //           </div>\n    //         </div>\n    //       )\n    //     }\n\n    //     <button>вперед</button>\n    //     <button>назад</button>\n\n    //   </div>\n    // </>\n  );\n}\n\nexport default Catalog;"]},"metadata":{},"sourceType":"module"}