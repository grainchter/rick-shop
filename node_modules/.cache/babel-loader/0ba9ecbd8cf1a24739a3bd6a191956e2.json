{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\rick-shop\\\\rick-shop\\\\src\\\\components\\\\header\\\\HeaderBaner\\\\HeaderBanner.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { database } from \"../../../firebase/firebase\";\nimport s from './HeaderBanner.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HeaderBanner = () => {\n  _s();\n\n  useEffect(() => {\n    if (Object.entries(char).length === 0) {\n      database.ref('hot').once('value', snapshot => {\n        const data = snapshot.val();\n        console.log(data);\n        setChar(data);\n      });\n      loopFunc();\n    }\n  }, []); // const getChar = () => {\n  //     database.ref('hot').once('value', (snapshot) => {\n  //         const data = snapshot.val();\n  //         setChar(data);\n  //     });\n  // }\n\n  const [char, setChar] = useState({});\n  const [arr, setArr] = useState({});\n  const [index, setIndex] = useState(0);\n\n  const loopFunc = () => {\n    setArr(char[Math.floor(Math.random() * 4)]);\n    console.log(arr);\n    setTimeout(loopFunc, 3000);\n  }; // kick it off\n  // setTimeout(() => {\n  //     // for (let i = index; i <= Object.entries(char).length - 1; i++) {\n  //     let rand = char[Math.floor(Math.random() * 4)];\n  //     hhh(rand);\n  //     // }\n  // }, 4000);\n  // const randomChar = async () => {\n  //     let gg = await char;\n  //     let shuffled = gg.sort(() => 0.5 - Math.random());\n  //     let selected = shuffled.slice(0, 1);\n  //     setRand(selected);\n  // }\n  // console.log(rand);\n  // const hhh = () => {\n  //     if (index > Object.entries(char).length - 1) {\n  //         setIndex(0);\n  //     } else if (index <= Object.entries(char).length - 1) {\n  //         // let shuffled = char.sort(() => 0.5 - Math.random());\n  //         // let selected = shuffled.slice(0, 1);\n  //         // console.log(char[Math.floor(Math.random() * 4)]);\n  //         // console.log(arr);\n  //         setIndex(index + 1);\n  //         console.log(index);\n  //         // console.log(index);\n  //     }\n  //     setTimeout(hhh, 6000);\n  // }\n  // const [dataChar, setData] = useState([]);\n  // const [char, setChar] = useState({});\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Object.entries(char).map(([key, {\n      name,\n      img,\n      description\n    }]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.wrap,\n      style: {\n        backgroundImage: \"url(\" + img + \")\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.character,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: s.buttons,\n        children: \"Show more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }, this))\n  }, void 0, false);\n};\n\n_s(HeaderBanner, \"z/iCKqHH1vnE4eE79auS39DVqc8=\");\n\n_c = HeaderBanner;\nexport default HeaderBanner;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderBanner\");","map":{"version":3,"sources":["C:/Users/user/rick-shop/rick-shop/src/components/header/HeaderBaner/HeaderBanner.js"],"names":["React","useState","useEffect","database","s","HeaderBanner","Object","entries","char","length","ref","once","snapshot","data","val","console","log","setChar","loopFunc","arr","setArr","index","setIndex","Math","floor","random","setTimeout","map","key","name","img","description","wrap","backgroundImage","character","buttons"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,4BAAzB;AAGA,OAAOC,CAAP,MAAc,2BAAd;;;;AAGA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEvBH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAII,MAAM,CAACC,OAAP,CAAeC,IAAf,EAAqBC,MAArB,KAAgC,CAApC,EAAuC;AACnCN,MAAAA,QAAQ,CAACO,GAAT,CAAa,KAAb,EAAoBC,IAApB,CAAyB,OAAzB,EAAmCC,QAAD,IAAc;AAC5C,cAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAb;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAI,QAAAA,OAAO,CAACJ,IAAD,CAAP;AACH,OAJD;AAKAK,MAAAA,QAAQ;AACX;AACJ,GATQ,EASN,EATM,CAAT,CAFuB,CAavB;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAM,CAACV,IAAD,EAAOS,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACkB,GAAD,EAAMC,MAAN,IAAgBnB,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMiB,QAAQ,GAAG,MAAM;AACnBE,IAAAA,MAAM,CAACZ,IAAI,CAACe,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAD,CAAL,CAAN;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACAO,IAAAA,UAAU,CAACR,QAAD,EAAW,IAAX,CAAV;AACH,GAJD,CAxBuB,CA8BvB;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;;;AAKA,sBACI;AAAA,cAIQZ,MAAM,CAACC,OAAP,CAAeC,IAAf,EAAqBmB,GAArB,CAAyB,CAAC,CAACC,GAAD,EAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,GAAR;AAAaC,MAAAA;AAAb,KAAN,CAAD,kBACrB;AAAK,MAAA,SAAS,EAAE3B,CAAC,CAAC4B,IAAlB;AAAwB,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE,SAASH,GAAT,GAAe;AAAlC,OAA/B;AAAA,8BACI;AAAK,QAAA,SAAS,EAAE1B,CAAC,CAAC8B,SAAlB;AAAA,gCACI;AAAA,oBAAKL;AAAL;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAIE;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAQ,QAAA,SAAS,EAAE3B,CAAC,CAAC+B,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAJR,mBADJ;AAiBH,CA3FD;;GAAM9B,Y;;KAAAA,Y;AA6FN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { database } from \"../../../firebase/firebase\";\r\n\r\n\r\nimport s from './HeaderBanner.module.css';\r\n\r\n\r\nconst HeaderBanner = () => {\r\n\r\n    useEffect(() => {\r\n        if (Object.entries(char).length === 0) {\r\n            database.ref('hot').once('value', (snapshot) => {\r\n                const data = snapshot.val();\r\n                console.log(data);\r\n                setChar(data);\r\n            });\r\n            loopFunc();\r\n        }\r\n    }, []);\r\n\r\n    // const getChar = () => {\r\n    //     database.ref('hot').once('value', (snapshot) => {\r\n    //         const data = snapshot.val();\r\n    //         setChar(data);\r\n    //     });\r\n    // }\r\n\r\n    const [char, setChar] = useState({});\r\n    const [arr, setArr] = useState({});\r\n    const [index, setIndex] = useState(0);\r\n\r\n    const loopFunc = () => {\r\n        setArr(char[Math.floor(Math.random() * 4)]);\r\n        console.log(arr);\r\n        setTimeout(loopFunc, 3000);\r\n    };\r\n\r\n    // kick it off\r\n\r\n    // setTimeout(() => {\r\n    //     // for (let i = index; i <= Object.entries(char).length - 1; i++) {\r\n    //     let rand = char[Math.floor(Math.random() * 4)];\r\n    //     hhh(rand);\r\n    //     // }\r\n    // }, 4000);\r\n\r\n\r\n\r\n\r\n    // const randomChar = async () => {\r\n    //     let gg = await char;\r\n    //     let shuffled = gg.sort(() => 0.5 - Math.random());\r\n    //     let selected = shuffled.slice(0, 1);\r\n    //     setRand(selected);\r\n    // }\r\n\r\n    // console.log(rand);\r\n\r\n    // const hhh = () => {\r\n    //     if (index > Object.entries(char).length - 1) {\r\n    //         setIndex(0);\r\n    //     } else if (index <= Object.entries(char).length - 1) {\r\n    //         // let shuffled = char.sort(() => 0.5 - Math.random());\r\n    //         // let selected = shuffled.slice(0, 1);\r\n    //         // console.log(char[Math.floor(Math.random() * 4)]);\r\n    //         // console.log(arr);\r\n    //         setIndex(index + 1);\r\n    //         console.log(index);\r\n    //         // console.log(index);\r\n    //     }\r\n    //     setTimeout(hhh, 6000);\r\n    // }\r\n\r\n\r\n\r\n    // const [dataChar, setData] = useState([]);\r\n    // const [char, setChar] = useState({});\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {\r\n\r\n                Object.entries(char).map(([key, { name, img, description }]) =>\r\n                    <div className={s.wrap} style={{ backgroundImage: \"url(\" + img + \")\" }}>\r\n                        <div className={s.character}>\r\n                            <h1>{name}</h1>\r\n                            <p>{description}</p>\r\n                        </div>\r\n                        <button className={s.buttons}>Show more</button>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HeaderBanner;"]},"metadata":{},"sourceType":"module"}