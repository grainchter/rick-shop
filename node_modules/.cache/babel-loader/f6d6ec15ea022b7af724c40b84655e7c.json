{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\rick-shop\\\\rick-shop\\\\src\\\\components\\\\main\\\\LoginForm\\\\forms\\\\reg.js\",\n    _s = $RefreshSig$();\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from './reg.module.scss';\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RegisterPage = () => {\n  _s();\n\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPass] = useState();\n\n  const onNameChange = e => {\n    setName({\n      name: e.target.value\n    });\n  };\n\n  const onEmailChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const onPassChange = e => {\n    setPass(e.target.value);\n  };\n\n  const register = async () => {\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password,\n        returnSecureToken: true\n      })\n    };\n    const responseReg = await fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyD5cN1cY35dyB4oeIzQCW_ZqkjwRkjtPPw', requestOptions).then(res => res.json());\n\n    if (responseReg.hasOwnProperty('error')) {\n      toast.error('user with this email already exist', {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    } else {\n      toast.success('successfully', {\n        position: \"top-center\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      await fetch(`https://rick-shop-f42cb-default-rtdb.firebaseio.com/users/${responseReg.localId}/name.json?auth=${responseReg.idToken}`, {\n        method: 'PATCH',\n        body: JSON.stringify(name)\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n      theme: \"colored\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.form_container,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.input_container,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"userName\",\n              children: \"userName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"userName\",\n              type: \"text\",\n              onChange: onNameChange,\n              autocomplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"email\",\n              onChange: onEmailChange,\n              type: \"text\",\n              autocomplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"pass\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"pass\",\n              onChange: onPassChange,\n              type: \"password\",\n              autocomplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.but,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: register,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RegisterPage, \"uz3QMuY3E6gmJBEhHoxDrrvj1jY=\");\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["C:/Users/user/rick-shop/rick-shop/src/components/main/LoginForm/forms/reg.js"],"names":["ToastContainer","toast","s","React","useState","RegisterPage","name","setName","email","setEmail","password","setPass","onNameChange","e","target","value","onEmailChange","onPassChange","register","requestOptions","method","body","JSON","stringify","returnSecureToken","responseReg","fetch","then","res","json","hasOwnProperty","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","success","localId","idToken","form","form_container","input_container","but"],"mappings":"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","sourcesContent":["import { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport s from './reg.module.scss';\r\nimport React, { useState } from \"react\";\r\n\r\nconst RegisterPage = () => {\r\n\r\n    const [name, setName] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPass] = useState();\r\n\r\n    const onNameChange = (e) => {\r\n        setName({ name: e.target.value });\r\n    }\r\n\r\n    const onEmailChange = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const onPassChange = (e) => {\r\n        setPass(e.target.value);\r\n    }\r\n\r\n    const register = async () => {\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email,\r\n                password,\r\n                returnSecureToken: true,\r\n            })\r\n        }\r\n\r\n        const responseReg = await fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyD5cN1cY35dyB4oeIzQCW_ZqkjwRkjtPPw', requestOptions).then(res => res.json())\r\n        if (responseReg.hasOwnProperty('error')) {\r\n            toast.error('user with this email already exist', {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        } else {\r\n            toast.success('successfully', {\r\n                position: \"top-center\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            await fetch(`https://rick-shop-f42cb-default-rtdb.firebaseio.com/users/${responseReg.localId}/name.json?auth=${responseReg.idToken}`,\r\n                {\r\n                    method: 'PATCH',\r\n                    body: JSON.stringify(name)\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer\r\n                theme='colored'\r\n            />\r\n            <div className={s.form}>\r\n                <div className={s.form_container}>\r\n                    <div className={s.input_container}>\r\n                        <div>\r\n                            <label htmlFor=\"userName\">userName</label>\r\n                            <input name=\"userName\" type=\"text\" onChange={onNameChange} autocomplete=\"off\"></input>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input name=\"email\" onChange={onEmailChange} type=\"text\" autocomplete=\"off\"></input>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"pass\">Password</label>\r\n                            <input name=\"pass\" onChange={onPassChange} type=\"password\" autocomplete=\"off\"></input>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.but}>\r\n                    <button onClick={register}>Login</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RegisterPage;"]},"metadata":{},"sourceType":"module"}