{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\rick-shop\\\\rick-shop\\\\src\\\\components\\\\main\\\\catalog.js\",\n    _s = $RefreshSig$();\n\nimport s from './catalog.module.css';\nimport { database } from '../../firebase/firebase';\nimport React, { useState, useEffect } from \"react\";\nimport Card from '../card/card'; // import { useDispatch, useSelector } from 'react-redux';\n// import { getCards } from '../../store/selected';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Catalog = () => {\n  _s();\n\n  // const dispatch = useDispatch();\n  const [char, setChar] = useState([]);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    database.ref('characters').once('value', snapshot => {\n      const data = snapshot.val();\n      const shuffled = data.sort(() => 0.5 - Math.random());\n      let selected = shuffled.slice(0, 8);\n      setChar(selected);\n    });\n  };\n\n  const buy = id => {\n    let obj = Object.entries(char);\n    const keyPock = obj.find(element => element[1].id === id);\n    console.log(keyPock);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.app,\n      children: [Object.entries(char).map(([key, {\n        name,\n        id,\n        image,\n        species,\n        status\n      }]) => /*#__PURE__*/_jsxDEV(Card, {\n        name: name,\n        image: image,\n        id: id,\n        species: species,\n        status: status,\n        onCardClick: () => {\n          buy(id);\n        }\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\u0432\\u043F\\u0435\\u0440\\u0435\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\u043D\\u0430\\u0437\\u0430\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false) // <>\n  //   <div className={s.app}>\n  //     {\n  //       Object.entries(char).map(([key, { name, id, image, species, status }]) =>\n  //         <div className={s.block}>\n  //           <a><img src={image}></img></a>\n  //           <div className={s.description}>\n  //             <div className={s.name}>\n  //               <p>{name}</p>\n  //               <p>{id}</p>\n  //             </div>\n  //             <hr />\n  //             <p>{species}</p>\n  //             <p>{status}</p>\n  //           </div>\n  //           <div className={s.buy}>\n  //             <h1>${Math.floor((Math.random() * 10000) + 1)}</h1>\n  //             <button onClick={buy(id)}>Buy</button>\n  //           </div>\n  //         </div>\n  //       )\n  //     }\n  //     <button>вперед</button>\n  //     <button>назад</button>\n  //   </div>\n  // </>\n  ;\n};\n\n_s(Catalog, \"8N1oG9vNjgXt64iToZFQOzEKz+g=\");\n\n_c = Catalog;\nexport default Catalog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Catalog\");","map":{"version":3,"sources":["C:/Users/user/rick-shop/rick-shop/src/components/main/catalog.js"],"names":["s","database","React","useState","useEffect","Card","Catalog","char","setChar","getData","ref","once","snapshot","data","val","shuffled","sort","Math","random","selected","slice","buy","id","obj","Object","entries","keyPock","find","element","console","log","app","map","key","name","image","species","status"],"mappings":";;;AAAA,OAAOA,CAAP,MAAc,sBAAd;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,cAAjB,C,CAEA;AACA;;;;;AAIA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAEpB;AAGA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAKAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,OAAO,GAAG,MAAM;AACpBR,IAAAA,QAAQ,CAACS,GAAT,CAAa,YAAb,EAA2BC,IAA3B,CAAgC,OAAhC,EAA0CC,QAAD,IAAc;AACrD,YAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAb;AACA,YAAMC,QAAQ,GAAGF,IAAI,CAACG,IAAL,CAAU,MAAM,MAAMC,IAAI,CAACC,MAAL,EAAtB,CAAjB;AACA,UAAIC,QAAQ,GAAGJ,QAAQ,CAACK,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAf;AACAZ,MAAAA,OAAO,CAACW,QAAD,CAAP;AACD,KALD;AAOD,GARD;;AAUA,QAAME,GAAG,GAAIC,EAAD,IAAQ;AAClB,QAAIC,GAAG,GAAGC,MAAM,CAACC,OAAP,CAAelB,IAAf,CAAV;AACA,UAAMmB,OAAO,GAAGH,GAAG,CAACI,IAAJ,CAASC,OAAO,IAC9BA,OAAO,CAAC,CAAD,CAAP,CAAWN,EAAX,KAAkBA,EADJ,CAAhB;AAEAO,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACD,GALD;;AAQA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAE1B,CAAC,CAAC+B,GAAlB;AAAA,iBAEIP,MAAM,CAACC,OAAP,CAAelB,IAAf,EAAqByB,GAArB,CAAyB,CAAC,CAACC,GAAD,EAAM;AAAEC,QAAAA,IAAF;AAAQZ,QAAAA,EAAR;AAAYa,QAAAA,KAAZ;AAAmBC,QAAAA,OAAnB;AAA4BC,QAAAA;AAA5B,OAAN,CAAD,kBACvB,QAAC,IAAD;AAEE,QAAA,IAAI,EAAEH,IAFR;AAGE,QAAA,KAAK,EAAEC,KAHT;AAIE,QAAA,EAAE,EAAEb,EAJN;AAKE,QAAA,OAAO,EAAEc,OALX;AAME,QAAA,MAAM,EAAEC,MANV;AAQE,QAAA,WAAW,EAAE,MAAM;AAEjBhB,UAAAA,GAAG,CAACC,EAAD,CAAH;AAED;AAZH,SACOA,EADP;AAAA;AAAA;AAAA;AAAA,cADF,CAFJ,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF,CA+BE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AA3DF;AA6DD,CA7FD;;GAAMhB,O;;KAAAA,O;AA+FN,eAAeA,OAAf","sourcesContent":["import s from './catalog.module.css';\nimport { database } from '../../firebase/firebase';\nimport React, { useState, useEffect } from \"react\";\nimport Card from '../card/card';\n\n// import { useDispatch, useSelector } from 'react-redux';\n// import { getCards } from '../../store/selected';\n\n\n\nconst Catalog = () => {\n\n  // const dispatch = useDispatch();\n\n\n  const [char, setChar] = useState([]);\n\n\n\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    database.ref('characters').once('value', (snapshot) => {\n      const data = snapshot.val();\n      const shuffled = data.sort(() => 0.5 - Math.random());\n      let selected = shuffled.slice(0, 8);\n      setChar(selected);\n    });\n\n  }\n\n  const buy = (id) => {\n    let obj = Object.entries(char);\n    const keyPock = obj.find(element =>\n      element[1].id === id);\n    console.log(keyPock);\n  }\n\n\n  return (\n    <>\n      <div className={s.app}>\n        {\n          Object.entries(char).map(([key, { name, id, image, species, status }]) =>\n            <Card\n              key={id}\n              name={name}\n              image={image}\n              id={id}\n              species={species}\n              status={status}\n\n              onCardClick={() => {\n\n                buy(id);\n\n              }\n              }\n            />\n          )\n        }\n\n        <button>вперед</button>\n        <button>назад</button>\n\n      </div>\n    </>\n\n\n\n    // <>\n    //   <div className={s.app}>\n    //     {\n    //       Object.entries(char).map(([key, { name, id, image, species, status }]) =>\n    //         <div className={s.block}>\n    //           <a><img src={image}></img></a>\n    //           <div className={s.description}>\n    //             <div className={s.name}>\n    //               <p>{name}</p>\n    //               <p>{id}</p>\n    //             </div>\n    //             <hr />\n    //             <p>{species}</p>\n    //             <p>{status}</p>\n    //           </div>\n\n    //           <div className={s.buy}>\n    //             <h1>${Math.floor((Math.random() * 10000) + 1)}</h1>\n    //             <button onClick={buy(id)}>Buy</button>\n    //           </div>\n    //         </div>\n    //       )\n    //     }\n\n    //     <button>вперед</button>\n    //     <button>назад</button>\n\n    //   </div>\n    // </>\n  );\n}\n\nexport default Catalog;"]},"metadata":{},"sourceType":"module"}