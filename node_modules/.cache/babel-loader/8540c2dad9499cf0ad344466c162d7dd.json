{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\rick-shop\\\\rick-shop\\\\src\\\\components\\\\main\\\\catalog.js\";\nimport s from './catalog.module.css';\nimport { database } from '../../firebase/firebase';\nimport React, { useState, useEffect } from \"react\";\nimport Card from '../card/card';\nimport { useDispatch } from 'react-redux';\nimport { getCardsResolve } from '../../store/selected';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Catalog = ({\n  char\n}) => {\n  // const dispatch = useDispatch();\n  // let onPage = 16;\n  // const [char, setChar] = useState([]);\n  // const [clicked, setClicked] = useState(JSON.parse(localStorage.getItem(\"data2\")));\n  // const [page, setPage] = useState(1);\n  // const [arr, setArr] = useState([]);\n  // const [isLoading, setLoading] = useState(false);\n  // dispatch(getCardsResolve(clicked));\n  // useEffect(() => {\n  //   getData(1);\n  // }, []);\n  // const getData = (num) => {\n  //   database.ref('characters').orderByChild(\"id\").startAt(num).limitToFirst(onPage).once('value', (snapshot) => {\n  //     snapshot.forEach((childSnapshot) => {\n  //       let childKey = childSnapshot.key;\n  //       setArr(arr => [...arr, childKey]);\n  //     });\n  //     const data = snapshot.val();\n  //     setChar(data);\n  //     setLoading(true);\n  //   });\n  // }\n  // const getPrev = (num) => {\n  //   database.ref('characters').orderByChild(\"id\").endAt(num).limitToLast(onPage).once('value', (snapshot) => {\n  //     snapshot.forEach((childSnapshot) => {\n  //       let childKey = childSnapshot.key;\n  //       setArr(arr => [...arr, childKey]);\n  //     });\n  //     const data = snapshot.val();\n  //     setChar(data);\n  //   });\n  // }\n  // const nexPage = () => {\n  //   let num = parseInt(arr[arr.length - 1]);\n  //   getData(num);\n  //   setArr([]);\n  //   setPage(page + 1);\n  // }\n  // const prevPage = () => {\n  //   let num = parseInt(arr[0]);\n  //   getPrev(num);\n  //   setArr([]);\n  //   setPage(page + 1);\n  // }\n  // const buy = (id) => {\n  //   let exist = false;\n  //   let obj = Object.entries(char);\n  //   const keyPock = obj.find(element =>\n  //     element[1].id === id);\n  //   const clicks = JSON.parse(localStorage.getItem(\"data2\")) ?? []\n  //   clicks.forEach(element => {\n  //     if (keyPock[0] === element[0]) {\n  //       exist = true;\n  //     }\n  //   })\n  //   if (localStorage.getItem(\"idToken\") != null) {\n  //     addCharacter(keyPock);\n  //   } else {\n  //     clicks.push(keyPock);\n  //     addCharacter(clicks);\n  //   }\n  // };\n  // const addCharacter = (clicks) => {\n  //   if (localStorage.getItem(\"idToken\") != null) {\n  //     console.log(clicks);\n  //     database.ref('/users/' + localStorage.getItem(\"idToken\") + '/basket/' + clicks[1].id).set(clicks[1]);\n  //   } else {\n  //     localStorage.setItem(\"data2\", JSON.stringify(clicks));\n  //     setClicked(JSON.parse(localStorage.getItem(\"data2\")));\n  //     console.log(\"записали в локалсторадж\");\n  //   }\n  // }\n  // console.log(isLoading);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.wrap,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.app,\n        children: Object.entries(char).map(([key, {\n          name,\n          id,\n          image,\n          species,\n          status,\n          price\n        }]) => /*#__PURE__*/_jsxDEV(Card, {\n          name: name,\n          image: image,\n          id: id,\n          species: species,\n          status: status,\n          price: price,\n          onCardClick: () => {\n            buy(id);\n          }\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: prevPage,\n          disabled: page == 1,\n          children: \"prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: nexPage,\n          children: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = Catalog;\nexport default Catalog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Catalog\");","map":{"version":3,"sources":["C:/Users/user/rick-shop/rick-shop/src/components/main/catalog.js"],"names":["s","database","React","useState","useEffect","Card","useDispatch","getCardsResolve","Catalog","char","wrap","app","Object","entries","map","key","name","id","image","species","status","price","buy","buttons","prevPage","page","nexPage"],"mappings":";AAAA,OAAOA,CAAP,MAAc,sBAAd;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,cAAjB;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,eAAT,QAAgC,sBAAhC;;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAE1B;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAET,CAAC,CAACU,IAAlB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEV,CAAC,CAACW,GAAlB;AAAA,kBAEIC,MAAM,CAACC,OAAP,CAAeJ,IAAf,EAAqBK,GAArB,CAAyB,CAAC,CAACC,GAAD,EAAM;AAAEC,UAAAA,IAAF;AAAQC,UAAAA,EAAR;AAAYC,UAAAA,KAAZ;AAAmBC,UAAAA,OAAnB;AAA4BC,UAAAA,MAA5B;AAAoCC,UAAAA;AAApC,SAAN,CAAD,kBACvB,QAAC,IAAD;AAEE,UAAA,IAAI,EAAEL,IAFR;AAGE,UAAA,KAAK,EAAEE,KAHT;AAIE,UAAA,EAAE,EAAED,EAJN;AAKE,UAAA,OAAO,EAAEE,OALX;AAME,UAAA,MAAM,EAAEC,MANV;AAOE,UAAA,KAAK,EAAEC,KAPT;AASE,UAAA,WAAW,EAAE,MAAM;AAEjBC,YAAAA,GAAG,CAACL,EAAD,CAAH;AAED;AAbH,WACOA,EADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,cADF,eAuBE;AAAK,QAAA,SAAS,EAAEjB,CAAC,CAACuB,OAAlB;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAEC,QAAjB;AAA2B,UAAA,QAAQ,EAAEC,IAAI,IAAI,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAEC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAiCD,CApID;;KAAMlB,O;AAsIN,eAAeA,OAAf","sourcesContent":["import s from './catalog.module.css';\nimport { database } from '../../firebase/firebase';\nimport React, { useState, useEffect } from \"react\";\nimport Card from '../card/card';\n\nimport { useDispatch } from 'react-redux';\nimport { getCardsResolve } from '../../store/selected';\n\nconst Catalog = ({char}) => {\n\n  // const dispatch = useDispatch();\n\n  // let onPage = 16;\n\n  // const [char, setChar] = useState([]);\n  // const [clicked, setClicked] = useState(JSON.parse(localStorage.getItem(\"data2\")));\n  // const [page, setPage] = useState(1);\n  // const [arr, setArr] = useState([]);\n\n  // const [isLoading, setLoading] = useState(false);\n\n  // dispatch(getCardsResolve(clicked));\n\n  // useEffect(() => {\n  //   getData(1);\n  // }, []);\n\n  // const getData = (num) => {\n  //   database.ref('characters').orderByChild(\"id\").startAt(num).limitToFirst(onPage).once('value', (snapshot) => {\n  //     snapshot.forEach((childSnapshot) => {\n  //       let childKey = childSnapshot.key;\n  //       setArr(arr => [...arr, childKey]);\n  //     });\n  //     const data = snapshot.val();\n  //     setChar(data);\n  //     setLoading(true);\n  //   });\n  // }\n\n  // const getPrev = (num) => {\n  //   database.ref('characters').orderByChild(\"id\").endAt(num).limitToLast(onPage).once('value', (snapshot) => {\n  //     snapshot.forEach((childSnapshot) => {\n  //       let childKey = childSnapshot.key;\n  //       setArr(arr => [...arr, childKey]);\n  //     });\n  //     const data = snapshot.val();\n\n  //     setChar(data);\n\n  //   });\n  // }\n\n  // const nexPage = () => {\n  //   let num = parseInt(arr[arr.length - 1]);\n  //   getData(num);\n  //   setArr([]);\n  //   setPage(page + 1);\n  // }\n\n  // const prevPage = () => {\n  //   let num = parseInt(arr[0]);\n  //   getPrev(num);\n  //   setArr([]);\n  //   setPage(page + 1);\n  // }\n\n  // const buy = (id) => {\n\n  //   let exist = false;\n\n  //   let obj = Object.entries(char);\n  //   const keyPock = obj.find(element =>\n  //     element[1].id === id);\n\n  //   const clicks = JSON.parse(localStorage.getItem(\"data2\")) ?? []\n\n  //   clicks.forEach(element => {\n  //     if (keyPock[0] === element[0]) {\n  //       exist = true;\n  //     }\n  //   })\n\n  //   if (localStorage.getItem(\"idToken\") != null) {\n  //     addCharacter(keyPock);\n  //   } else {\n  //     clicks.push(keyPock);\n  //     addCharacter(clicks);\n  //   }\n  // };\n\n  // const addCharacter = (clicks) => {\n\n  //   if (localStorage.getItem(\"idToken\") != null) {\n  //     console.log(clicks);\n\n  //     database.ref('/users/' + localStorage.getItem(\"idToken\") + '/basket/' + clicks[1].id).set(clicks[1]);\n\n  //   } else {\n  //     localStorage.setItem(\"data2\", JSON.stringify(clicks));\n  //     setClicked(JSON.parse(localStorage.getItem(\"data2\")));\n  //     console.log(\"записали в локалсторадж\");\n  //   }\n\n  // }\n\n  // console.log(isLoading);\n\n  return (\n    <>\n      <div className={s.wrap}>\n        <div className={s.app}>\n          {\n            Object.entries(char).map(([key, { name, id, image, species, status, price }]) =>\n              <Card\n                key={id}\n                name={name}\n                image={image}\n                id={id}\n                species={species}\n                status={status}\n                price={price}\n\n                onCardClick={() => {\n\n                  buy(id);\n\n                }\n                }\n              />\n            )\n          }\n        </div>\n        <div className={s.buttons}>\n          <button onClick={prevPage} disabled={page == 1}>prev</button>\n          <button onClick={nexPage}>next</button>\n        </div>\n\n      </div>\n    </>\n  );\n}\n\nexport default Catalog;"]},"metadata":{},"sourceType":"module"}