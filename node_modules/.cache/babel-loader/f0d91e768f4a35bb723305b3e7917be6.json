{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\rick-shop\\\\src\\\\components\\\\header\\\\MenuHeader\\\\MenuHeader.js\",\n    _s = $RefreshSig$();\n\nimport { NotificationManager } from 'react-notifications';\nimport Menu from \"./Menu/Menu\";\nimport Navbar from \"./Navbar/Navbar\";\nimport { useState } from 'react/cjs/react.development';\nimport Modal from \"../../Modal/Modal\";\nimport LoginForm from \"../../LoginForm/LoginForm\";\nimport { useDispatch } from 'react-redux';\nimport { getUserUpdateAsync } from '../../../store/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MenuHeader = ({\n  bgActive\n}) => {\n  _s();\n\n  const [menuClicked, setMenuClicked] = useState(false);\n  const [menuPageActive, setMenuPageActive] = useState(undefined);\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const onIsClicked = isClicked => {\n    setMenuClicked(isClicked);\n  };\n\n  const handleChangeActive = menuActive => {\n    setMenuPageActive(menuActive);\n  };\n\n  const handleClickLogin = () => {\n    setIsOpenModal(prevState => !prevState);\n  };\n\n  const handleSubmitLogin = async ({\n    email,\n    password,\n    regOrLog\n  }) => {\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password,\n        returnSecureToken: true\n      })\n    };\n\n    if (regOrLog === true) {\n      const response = await fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCe-Doqgd0OJ3sCSO6HoxzLr7jA9kZ3_4s', requestOptions).then(res => res.json());\n      console.log(response);\n\n      if (response.hasOwnProperty('error')) {\n        NotificationManager.error(response.error.message, \"Wrong\");\n      } else {\n        NotificationManager.success('Success');\n        const pokemonsStart = await fetch('https://reactmarathon-api.herokuapp.com/api/pokemons/starter').then(res => res.json());\n\n        for (const item of pokemonsStart.data) {\n          await fetch(`https://pokemon-game-62e1c-default-rtdb.firebaseio.com/${response.localId}/pokemons.json?auth=${response.idToken}`, {\n            method: 'POST',\n            body: JSON.stringify(item)\n          });\n        }\n      }\n    } else if (regOrLog === false) {\n      const responseAuth = await fetch('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCe-Doqgd0OJ3sCSO6HoxzLr7jA9kZ3_4s', requestOptions).then(res => res.json());\n\n      if (responseAuth.hasOwnProperty('error')) {\n        NotificationManager.error(responseAuth.error.message, \"Wrong\");\n      } else {\n        localStorage.setItem('idToken', responseAuth.idToken);\n        setIsOpenModal(prevState => !prevState);\n        NotificationManager.success('Success Auth');\n        dispatch(getUserUpdateAsync());\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {\n      isActive: menuPageActive,\n      onChangeActive: handleChangeActive,\n      onIsClicked: onIsClicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      bgActive: bgActive,\n      onChangeActive: handleChangeActive,\n      noneActive: menuClicked,\n      onClickLogin: handleClickLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpenModal,\n      title: \"Log in\",\n      onCloseModal: handleClickLogin,\n      children: /*#__PURE__*/_jsxDEV(LoginForm, {\n        onSubmit: handleSubmitLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MenuHeader, \"WhvI2Hr9L+51wmQWOu0A0QRi2/I=\", false, function () {\n  return [useDispatch];\n});\n\n_c = MenuHeader;\nexport default MenuHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuHeader\");","map":{"version":3,"sources":["C:/Users/user/rick-shop/src/components/header/MenuHeader/MenuHeader.js"],"names":["NotificationManager","Menu","Navbar","useState","Modal","LoginForm","useDispatch","getUserUpdateAsync","MenuHeader","bgActive","menuClicked","setMenuClicked","menuPageActive","setMenuPageActive","undefined","isOpenModal","setIsOpenModal","dispatch","onIsClicked","isClicked","handleChangeActive","menuActive","handleClickLogin","prevState","handleSubmitLogin","email","password","regOrLog","requestOptions","method","body","JSON","stringify","returnSecureToken","response","fetch","then","res","json","console","log","hasOwnProperty","error","message","success","pokemonsStart","item","data","localId","idToken","responseAuth","localStorage","setItem"],"mappings":"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","sourcesContent":["import { NotificationManager } from 'react-notifications';\r\n\r\nimport Menu from \"./Menu/Menu\";\r\nimport Navbar from \"./Navbar/Navbar\";\r\nimport { useState } from 'react/cjs/react.development';\r\nimport Modal from \"../../Modal/Modal\";\r\nimport LoginForm from \"../../LoginForm/LoginForm\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { getUserUpdateAsync } from '../../../store/user';\r\n\r\n\r\nconst MenuHeader = ({ bgActive }) => {\r\n\r\n    const [menuClicked, setMenuClicked] = useState(false);\r\n    const [menuPageActive, setMenuPageActive] = useState(undefined);\r\n    const [isOpenModal, setIsOpenModal] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const onIsClicked = (isClicked) => {\r\n        setMenuClicked(isClicked);\r\n    }\r\n\r\n    const handleChangeActive = (menuActive) => {\r\n        setMenuPageActive(menuActive);\r\n    }\r\n\r\n    const handleClickLogin = () => {\r\n        setIsOpenModal(prevState => !prevState);\r\n    }\r\n\r\n    const handleSubmitLogin = async ({ email, password, regOrLog }) => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email,\r\n                password,\r\n                returnSecureToken: true,\r\n            })\r\n        }\r\n\r\n        if (regOrLog === true) {\r\n            const response = await fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCe-Doqgd0OJ3sCSO6HoxzLr7jA9kZ3_4s', requestOptions).then(res => res.json())\r\n            console.log(response);\r\n            if (response.hasOwnProperty('error')) {\r\n                NotificationManager.error(response.error.message, \"Wrong\");\r\n            } else {\r\n                NotificationManager.success('Success');\r\n                const pokemonsStart = await fetch('https://reactmarathon-api.herokuapp.com/api/pokemons/starter').then(res => res.json());\r\n                for (const item of pokemonsStart.data) {\r\n                    await fetch(`https://pokemon-game-62e1c-default-rtdb.firebaseio.com/${response.localId}/pokemons.json?auth=${response.idToken}`, {\r\n                        method: 'POST',\r\n                        body: JSON.stringify(item)\r\n                    });\r\n                }\r\n            }\r\n        } else if (regOrLog === false) {\r\n            const responseAuth = await fetch('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCe-Doqgd0OJ3sCSO6HoxzLr7jA9kZ3_4s', requestOptions).then(res => res.json())\r\n            if (responseAuth.hasOwnProperty('error')) {\r\n                NotificationManager.error(responseAuth.error.message, \"Wrong\");\r\n            } else {\r\n                localStorage.setItem('idToken', responseAuth.idToken);\r\n                setIsOpenModal(prevState => !prevState);\r\n                NotificationManager.success('Success Auth');\r\n                dispatch(getUserUpdateAsync());\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Menu\r\n                isActive={menuPageActive}\r\n                onChangeActive={handleChangeActive}\r\n                onIsClicked={onIsClicked} />\r\n            <Navbar\r\n                bgActive={bgActive}\r\n                onChangeActive={handleChangeActive}\r\n                noneActive={menuClicked}\r\n                onClickLogin={handleClickLogin}\r\n            />\r\n            <Modal\r\n                isOpen={isOpenModal}\r\n                title=\"Log in\"\r\n                onCloseModal={handleClickLogin}\r\n            >\r\n                <LoginForm\r\n                    onSubmit={handleSubmitLogin}\r\n                />\r\n            </Modal>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MenuHeader;\r\n"]},"metadata":{},"sourceType":"module"}